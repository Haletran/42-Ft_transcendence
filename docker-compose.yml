services:
  reverseproxy:
    #    build: src/reverseproxy/.
    image: nginx:latest
    container_name: reverseproxy
    networks:
      - transcendence
    ports:
      - "443:443"
    volumes:
      - ./src/reverseproxy/conf/core.conf:/etc/nginx/conf.d/core.conf # location of static content:
      - ./src/reverseproxy/static-content:/var/www/html
      - ./src/reverseproxy/ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./src/reverseproxy/ssl/nginx.key:/etc/nginx/ssl/nginx.key
      - profile_pictures:/usr/share/nginx/media/
    depends_on:
      - django-credentials
    env_file:
      - .env

  hardhat:
    build:
      context: ./src/crypto/.
    container_name: hardhat
    env_file:
      - .env
    ports:
      - "8545:8545"
    volumes:
      - ./src/crypto/.:/usr/src/app
    networks:
      - transcendence
    command: >
      sh -c "sleep 8 && npx hardhat node"


  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - transcendence

  vault:
    image: hashicorp/vault:latest
    container_name: vault_container
    ports:
      - "8200"
    volumes:
      - ./src/vault/config:/vault/config
      #- ./vault/policies:/vault/policies
      - ./src/vault/data:/vault/data
    env_file:
      - .env
    cap_add:
      - IPC_LOCK
    networks:
      - transcendence
    command: /bin/sh -c "vault server -config=/vault/config/vault.json & sleep 1 && ./vault/config/unseal.sh && tail -f /dev/null"

  #LOGIN/REGISTER

  django-credentials:
    build: src/django-credentials/.
    container_name: django-credentials
    expose:
      - "9000"
    volumes:
      - ./src/django-credentials/ssl/django-credentials.key:/etc/ssl/private/django.key
      - ./src/django-credentials/ssl/django-credentials.crt:/etc/ssl/certs/django.crt
      - profile_pictures:/app/media/
    env_file:
      - .env
    environment:
      VAULT_ADDR: 'http://vault_container:8200' # Vault service name here
      CLIENT_ID: "u-s4t2ud-24552aea517bf1496668f819d1dabbc2c0eb6d12a3e9c5e75a16a6b41738819c"
      CLIENT_SECRET: "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"
      REDIRECT_URI: "https://localhost/api/credentials/callback"
    depends_on:
      - database
    networks:
      - transcendence
    command: >
      sh -c "sleep 8 && python3 manage.py makemigrations && python manage.py makemigrations my_auth && python3 manage.py migrate && daphne -b 0.0.0.0 -p 9000 credentials.asgi:application"

  database:
    image: postgres:latest
    container_name: credentials-database
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - credentials_data:/var/lib/postgresql/data
      - ./src/database/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - transcendence

  # FRIENDS

  django-friends:
    build: src/django_friends/.
    container_name: django-friends
    expose:
      - "9001"
    env_file:
      - .env
    depends_on:
      - friends-database
    networks:
      - transcendence
    command: >
      sh -c "sleep 8 && python3 manage.py makemigrations && python manage.py makemigrations friends && python3 manage.py migrate && gunicorn --bind 0.0.0.0:9001 django_friends.wsgi:application"

  friends-database:
    image: postgres:latest
    container_name: friends-database
    ports:
      - "5433"
    volumes:
      - friends_data:/var/lib/postgresql/data
      - ./src/friends-database/postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_FRIENDS}
      POSTGRES_USER: ${POSTGRES_USER_FRIENDS}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_FRIENDS}
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - transcendence

  # SCORES
  django-scores:
    build: src/django-scores/.
    container_name: django-scores
    expose:
      - "9003"
    depends_on:
      - scores-database
    networks:
      - transcendence
    command: >
      sh -c "sleep 8 && python3 manage.py makemigrations && python3 manage.py migrate && daphne -b 0.0.0.0 -p 9003 django_scores.asgi:application"

  scores-database:
    image: postgres:latest
    container_name: scores-database
    ports:
      - "5435:5435"
    volumes:
      - scores_data:/var/lib/postgresql/data
      - ./src/scores-database/postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_DB: scores_db
      POSTGRES_USER: scores_user
      POSTGRES_PASSWORD: scores_password
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - transcendence

volumes:
  dblogins:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './data/dblogins'
  credentials_data:
  friends_data:
  scores_data:
  profile_pictures:


networks:
  transcendence:
    driver: bridge
